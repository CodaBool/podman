# https://pykickstart.readthedocs.io/en/latest/kickstart-docs.html

[customizations.installer.kickstart]
contents = """
text --non-interactive
lang en_US.UTF-8
keyboard us
timezone --utc America/New_York

# prevent data loss, restrict to one SSD
# use `ls -l /dev/disk/by-id` to find a drive's ID
ignoredisk --only-use=/dev/disk/by-id/nvme-Sabrent_Rocket_Q_CD8E07031F9E02553696

# use `mkpasswd -m yescrypt` to hash a password
rootpw $y$j9T$TLmZI4s0kzyHp5I29M1Mn0$aZqMs5x6tnuWCQGw3aDG1IPx5dMHUgEboSItwdkbXk1 --iscrypted
user --name=codabool --password=$y$j9T$TLmZI4s0kzyHp5I29M1Mn0$aZqMs5x6tnuWCQGw3aDG1IPx5dMHUgEboSItwdkbXk1 --groups wheel --iscrypted

# add a public ssh key
# initial generation can be done with
# ssh-keygen -C "codabool@pm.me"
sshkey --username=codabool "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMfUsfu77V5hCYDnZT/nNc0FH++NfbFrMPMLA5vd3voT codabool@pm.me"

# dangerously wipe drive, use with care
zerombr
clearpart --all --initlabel
autopart --noswap

# set a static IP
# use the mac address from `ip a`
network --bootproto=static --device=2c:f0:5d:92:b3:51 --ip=192.168.0.25 --gateway=192.168.0.1 --nameserver=192.168.0.1 --netmask=255.255.255.0 --activate --onboot=yes

# perform actions as chroot
# package installation should be done in the Dockerfile
%post

# write mount entry
# use `sudo fdisk -l` to get partition UUID
echo "UUID=9ad9e322-be33-4f0c-8c7b-eb5a5fb6bb3b /mnt ext4 defaults 0 0" >> /etc/fstab

# setup podman
mkdir -p /home/codabool/.config/containers/systemd
cd /home/codabool/.config/containers/systemd
git clone https://github.com/codabool/podman .
chown -R 1000:1000 /home/codabool/.config

# enable linger, which allows services to start before login
# `loginctl enable-linger codabool` did not work for me
mkdir -p /var/lib/systemd/linger
touch /var/lib/systemd/linger/codabool

# daily updates to containers with AutoUpdate=registry
# this should be done for rootless and root (rootless happens later)
systemctl enable podman-auto-update.timer

# Symlink the socket unit from system's user-unit dir to default.target.wants
# which will effectively enable the service
# `systemctl --user -M codabool@ enable --now podman.socket` did not work for me
mkdir -p /home/codabool/.config/systemd/user/default.target.wants
chmod 0755 /home/codabool/.config/systemd/user
ln -sf /usr/lib/systemd/user/podman.socket /home/codabool/.config/systemd/user/default.target.wants/podman.socket
ln -sf /usr/lib/systemd/user/podman-auto-update.timer /home/codabool/.config/systemd/user/default.target.wants/podman-auto-update.timer

# give the machine a name manually
# `hostnamectl set-hostname` does not work for me
echo "mom" > /etc/hostname

%end
reboot
"""


# Dev notes
# - use /dev/disk/by-id/ata-ADATA_SU670_2L272L127DLC for testing